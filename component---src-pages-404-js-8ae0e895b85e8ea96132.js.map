{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","styled_components__WEBPACK_IMPORTED_MODULE_1__","SiteContentWrapper","styled","main","withConfig","displayName","componentId","Layout","_ref","children","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAaeQ,UARM,kBACnBJ,EAAAK,EAAAC,cAACJ,EAAA,EAAD,KACEF,EAAAK,EAAAC,cAACH,EAAA,EAAD,CAAKI,MAAM,mBACXP,EAAAK,EAAAC,cAAA,uBACAN,EAAAK,EAAAC,cAAA,wGCTJ,IAAAP,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAS,EAAAZ,EAAA,KAKMa,GALNb,EAAA,KAAAA,EAAA,KAK2Bc,IAAOC,KAAVC,WAAA,CAAAC,YAAA,6BAAAC,YAAA,YAAGJ,CAAH,uEAaTK,IANA,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACbjB,EAAAK,EAAAC,cAACG,EAAD,KACGQ,qFCFL,SAASC,EAATF,GAEG,IADDG,EACCH,EADDG,YAAaC,EACZJ,EADYI,KAAMC,EAClBL,EADkBK,KAAMd,EACxBS,EADwBT,MAEjBe,EADPC,EAAAC,KACOF,KAcFG,EAAkBN,GAAeG,EAAKI,aAAaP,YAEzD,OACEQ,EAAAtB,EAAAC,cAACsB,EAAAvB,EAAD,CACEwB,eAAgB,CACdT,QAEFb,MAAOA,EACPuB,cAAa,QAAUR,EAAKI,aAAanB,MACzCc,KAAM,CACJ,CACEU,KAAM,cACNC,QAASP,GAEX,CACEQ,SAAU,WACVD,QAASzB,GAEX,CACE0B,SAAU,iBACVD,QAASP,GAEX,CACEQ,SAAU,UACVD,QAAS,WAEX,CACED,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,QAASV,EAAKI,aAAaQ,QAE7B,CACEH,KAAM,gBACNC,QAASzB,GAEX,CACEwB,KAAM,sBACNC,QAASP,IAEXU,OAAOd,KAKfH,EAAIkB,aAAe,CACjBhB,KAAM,KACNC,KAAM,GACNF,YAAa,IAUAD","file":"component---src-pages-404-js-8ae0e895b85e8ea96132.js","sourcesContent":["import React from 'react';\r\n\r\nimport Layout from '../components/layout';\r\nimport SEO from '../components/seo';\r\n\r\nconst NotFoundPage = () => (\r\n  <Layout>\r\n    <SEO title=\"404: Not found\" />\r\n    <h1>NOT FOUND</h1>\r\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n  </Layout>\r\n);\r\n\r\nexport default NotFoundPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport '../styles/reset.css';\r\nimport '../styles/global.css';\r\n\r\nconst SiteContentWrapper = styled.main`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  text-align: center;\r\n`;\r\n\r\nconst Layout = ({ children }) => (\r\n  <SiteContentWrapper>\r\n    {children}\r\n  </SiteContentWrapper>\r\n);\r\n\r\nexport default Layout;\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Helmet from 'react-helmet';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\n\r\nfunction SEO({\r\n  description, lang, meta, title,\r\n}) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `,\r\n  );\r\n\r\n  const metaDescription = description || site.siteMetadata.description;\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: 'description',\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: 'og:title',\r\n          content: title,\r\n        },\r\n        {\r\n          property: 'og:description',\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: 'og:type',\r\n          content: 'website',\r\n        },\r\n        {\r\n          name: 'twitter:card',\r\n          content: 'summary',\r\n        },\r\n        {\r\n          name: 'twitter:creator',\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: 'twitter:title',\r\n          content: title,\r\n        },\r\n        {\r\n          name: 'twitter:description',\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  );\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: 'en',\r\n  meta: [],\r\n  description: '',\r\n};\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default SEO;\r\n"],"sourceRoot":""}